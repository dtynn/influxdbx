// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	cluster.proto

It has these top-level messages:
	Node
	Result
	ClusterJoinReq
	ClusterJoinResp
	ClusterRemoveReq
	ClusterRemoveResp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Code int32

const (
	Code_CodeOK        Code = 0
	Code_CodeNotLeader Code = 1001
)

var Code_name = map[int32]string{
	0:    "CodeOK",
	1001: "CodeNotLeader",
}
var Code_value = map[string]int32{
	"CodeOK":        0,
	"CodeNotLeader": 1001,
}

func (x Code) String() string {
	return proto1.EnumName(Code_name, int32(x))
}
func (Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Node struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto1.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Result struct {
	Code    Code   `protobuf:"varint,1,opt,name=code,enum=proto.Code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto1.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_CodeOK
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ClusterJoinReq struct {
	Node []*Node `protobuf:"bytes,1,rep,name=node" json:"node,omitempty"`
}

func (m *ClusterJoinReq) Reset()                    { *m = ClusterJoinReq{} }
func (m *ClusterJoinReq) String() string            { return proto1.CompactTextString(m) }
func (*ClusterJoinReq) ProtoMessage()               {}
func (*ClusterJoinReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClusterJoinReq) GetNode() []*Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterJoinResp struct {
	Code   Code  `protobuf:"varint,1,opt,name=code,enum=proto.Code" json:"code,omitempty"`
	Leader *Node `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
}

func (m *ClusterJoinResp) Reset()                    { *m = ClusterJoinResp{} }
func (m *ClusterJoinResp) String() string            { return proto1.CompactTextString(m) }
func (*ClusterJoinResp) ProtoMessage()               {}
func (*ClusterJoinResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClusterJoinResp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_CodeOK
}

func (m *ClusterJoinResp) GetLeader() *Node {
	if m != nil {
		return m.Leader
	}
	return nil
}

type ClusterRemoveReq struct {
	Node []*Node `protobuf:"bytes,1,rep,name=node" json:"node,omitempty"`
}

func (m *ClusterRemoveReq) Reset()                    { *m = ClusterRemoveReq{} }
func (m *ClusterRemoveReq) String() string            { return proto1.CompactTextString(m) }
func (*ClusterRemoveReq) ProtoMessage()               {}
func (*ClusterRemoveReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClusterRemoveReq) GetNode() []*Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterRemoveResp struct {
	Code   Code  `protobuf:"varint,1,opt,name=code,enum=proto.Code" json:"code,omitempty"`
	Leader *Node `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
}

func (m *ClusterRemoveResp) Reset()                    { *m = ClusterRemoveResp{} }
func (m *ClusterRemoveResp) String() string            { return proto1.CompactTextString(m) }
func (*ClusterRemoveResp) ProtoMessage()               {}
func (*ClusterRemoveResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClusterRemoveResp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_CodeOK
}

func (m *ClusterRemoveResp) GetLeader() *Node {
	if m != nil {
		return m.Leader
	}
	return nil
}

func init() {
	proto1.RegisterType((*Node)(nil), "proto.Node")
	proto1.RegisterType((*Result)(nil), "proto.Result")
	proto1.RegisterType((*ClusterJoinReq)(nil), "proto.ClusterJoinReq")
	proto1.RegisterType((*ClusterJoinResp)(nil), "proto.ClusterJoinResp")
	proto1.RegisterType((*ClusterRemoveReq)(nil), "proto.ClusterRemoveReq")
	proto1.RegisterType((*ClusterRemoveResp)(nil), "proto.ClusterRemoveResp")
	proto1.RegisterEnum("proto.Code", Code_name, Code_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cluster service

type ClusterClient interface {
	// add nodes to cluster
	Join(ctx context.Context, in *ClusterJoinReq, opts ...grpc.CallOption) (*ClusterJoinResp, error)
	// remove nodes to cluster
	Remove(ctx context.Context, in *ClusterRemoveReq, opts ...grpc.CallOption) (*ClusterRemoveResp, error)
}

type clusterClient struct {
	cc *grpc.ClientConn
}

func NewClusterClient(cc *grpc.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) Join(ctx context.Context, in *ClusterJoinReq, opts ...grpc.CallOption) (*ClusterJoinResp, error) {
	out := new(ClusterJoinResp)
	err := grpc.Invoke(ctx, "/proto.Cluster/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) Remove(ctx context.Context, in *ClusterRemoveReq, opts ...grpc.CallOption) (*ClusterRemoveResp, error) {
	out := new(ClusterRemoveResp)
	err := grpc.Invoke(ctx, "/proto.Cluster/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cluster service

type ClusterServer interface {
	// add nodes to cluster
	Join(context.Context, *ClusterJoinReq) (*ClusterJoinResp, error)
	// remove nodes to cluster
	Remove(context.Context, *ClusterRemoveReq) (*ClusterRemoveResp, error)
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cluster/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).Join(ctx, req.(*ClusterJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterRemoveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cluster/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).Remove(ctx, req.(*ClusterRemoveReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Cluster_Join_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Cluster_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}

func init() { proto1.RegisterFile("cluster.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x6d, 0x8c, 0x09, 0x4e, 0x69, 0x8c, 0x03, 0x6a, 0xe8, 0x45, 0x89, 0x20, 0xc5, 0x43,
	0xd1, 0x16, 0x4f, 0x1e, 0x73, 0x53, 0x89, 0xb0, 0x17, 0xf1, 0x18, 0xbb, 0x83, 0x04, 0xd2, 0x6e,
	0xcc, 0xa4, 0xde, 0xfc, 0xc1, 0xfe, 0x0b, 0x99, 0x4d, 0x52, 0x48, 0x29, 0xe8, 0xc1, 0xd3, 0x66,
	0xe6, 0xcd, 0xfb, 0xe6, 0x31, 0x81, 0xd1, 0xa2, 0x58, 0x73, 0x4d, 0xd5, 0xb4, 0xac, 0x4c, 0x6d,
	0xf0, 0xc0, 0x3e, 0xf1, 0x0d, 0xb8, 0xa9, 0xd1, 0x84, 0x01, 0x38, 0xb9, 0x8e, 0x06, 0x17, 0x83,
	0xc9, 0xa1, 0x72, 0x72, 0x8d, 0x11, 0xf8, 0x99, 0xd6, 0x15, 0x31, 0x47, 0x8e, 0x6d, 0x76, 0x65,
	0x9c, 0x80, 0xa7, 0x88, 0xd7, 0x45, 0x8d, 0xe7, 0xe0, 0x2e, 0x8c, 0x26, 0xeb, 0x0a, 0x66, 0xc3,
	0x06, 0x3c, 0x4d, 0x8c, 0x26, 0x65, 0x05, 0x81, 0x2c, 0x89, 0x39, 0x7b, 0xa7, 0x0e, 0xd2, 0x96,
	0xf1, 0x2d, 0x04, 0x49, 0x13, 0xe7, 0xc1, 0xe4, 0x2b, 0x45, 0x1f, 0x02, 0x5b, 0x35, 0xb0, 0xfd,
	0xc9, 0x70, 0x03, 0x4b, 0x2d, 0x4c, 0x84, 0xf8, 0x05, 0x8e, 0x7a, 0x16, 0x2e, 0x7f, 0x0f, 0x70,
	0x09, 0x5e, 0x41, 0x99, 0xa6, 0xca, 0xee, 0xdf, 0xc2, 0xb6, 0x52, 0x3c, 0x87, 0xb0, 0x05, 0x2b,
	0x5a, 0x9a, 0x4f, 0xfa, 0x53, 0x9a, 0x57, 0x38, 0xde, 0x32, 0xfd, 0x57, 0x9e, 0xeb, 0x2b, 0x70,
	0xc5, 0x82, 0x00, 0x9e, 0xbc, 0xcf, 0x8f, 0xe1, 0x1e, 0x22, 0x8c, 0xe4, 0x3b, 0x35, 0xf5, 0x93,
	0x1d, 0x0a, 0xbf, 0xfd, 0xd9, 0x17, 0xf8, 0x6d, 0x04, 0xbc, 0x03, 0x57, 0x8e, 0x82, 0x27, 0xdd,
	0xca, 0xde, 0x6d, 0xc7, 0xa7, 0xbb, 0xda, 0x5c, 0xe2, 0xbd, 0xfc, 0x4a, 0x49, 0x8f, 0x67, 0xfd,
	0x89, 0xcd, 0x21, 0xc6, 0xd1, 0x6e, 0x81, 0xcb, 0x37, 0xcf, 0x0a, 0xf3, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa3, 0x66, 0x55, 0x6d, 0x58, 0x02, 0x00, 0x00,
}
