// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meta_cmd.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MetaCmdType int32

const (
	MetaCmdType_MetaCmdTypeUnknown        MetaCmdType = 0
	MetaCmdType_MetaCmdTypeCreateMetaNode MetaCmdType = 1
)

var MetaCmdType_name = map[int32]string{
	0: "MetaCmdTypeUnknown",
	1: "MetaCmdTypeCreateMetaNode",
}
var MetaCmdType_value = map[string]int32{
	"MetaCmdTypeUnknown":        0,
	"MetaCmdTypeCreateMetaNode": 1,
}

func (x MetaCmdType) String() string {
	return proto.EnumName(MetaCmdType_name, int32(x))
}
func (MetaCmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type MetaCmdCreateMetaNode struct {
	ID      uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *MetaCmdCreateMetaNode) Reset()                    { *m = MetaCmdCreateMetaNode{} }
func (m *MetaCmdCreateMetaNode) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdCreateMetaNode) ProtoMessage()               {}
func (*MetaCmdCreateMetaNode) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *MetaCmdCreateMetaNode) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MetaCmdCreateMetaNode) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*MetaCmdCreateMetaNode)(nil), "pb.MetaCmdCreateMetaNode")
	proto.RegisterEnum("pb.MetaCmdType", MetaCmdType_name, MetaCmdType_value)
}

func init() { proto.RegisterFile("meta_cmd.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4d, 0x2d, 0x49,
	0x8c, 0x4f, 0xce, 0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x72,
	0xe4, 0x12, 0xf5, 0x4d, 0x2d, 0x49, 0x74, 0xce, 0x4d, 0x71, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x05,
	0x71, 0xfc, 0xf2, 0x53, 0x52, 0x85, 0xf8, 0xb8, 0x98, 0x3c, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x82, 0x98, 0x3c, 0x5d, 0x84, 0x24, 0xb8, 0xd8, 0x13, 0x53, 0x52, 0x8a, 0x52, 0x8b, 0x8b,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x2d, 0x17, 0x2e, 0x6e, 0xa8, 0x11, 0x21,
	0x95, 0x05, 0xa9, 0x42, 0x62, 0x5c, 0x42, 0x48, 0xdc, 0xd0, 0xbc, 0xec, 0xbc, 0xfc, 0xf2, 0x3c,
	0x01, 0x06, 0x21, 0x59, 0x2e, 0x49, 0x24, 0x71, 0x54, 0xdb, 0x04, 0x18, 0x93, 0xd8, 0xc0, 0x6e,
	0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xe5, 0x7d, 0x99, 0xa5, 0x00, 0x00, 0x00,
}
